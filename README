Το πρόγραμμα lexan αναλύει ένα κείμενο με βάση τις λέξεις που έχουν χρησιμοποιηθεί και εκτυπώνει τις πιο 
ενδιαφέρουσες λέξεις, με τις περισσότερες επαναλήψεις μέσα στο κείμενο. 
Το root process μετράει τις γραμμές του κειμένου και δημιουργεί child processes μέσω fork. Τα fork που 
χρειάζεται να κάνει αρχικά είναι όσο και ο αριθμός των splitters που έχει δοθεί από τη γραμμή εντολών.


Έτσι δημιουργούνται l splitters και μέσω του execlp ο κάθε splitter τρέχει το εκτελέσιμο του splitters.c. 
Για την επικοινωνία μεταξύ των διεργασιών root-splitter χρησιμοποιούνται l normal pipes, μέσω των οποίων 
στέλνουμε τη γραμμή που πρέπει να ξεκινήσει και να τελειώσει το διάβασμα και την επεξεργασία ο κάθε splitter. 
Αυτός λαμβάνοντας τις γραμμές διαβάζει και δημιουργεί ξεχωριστές λέξεις τις οποίες με βάση μια συνάρτηση 
κατακερματισμού στέλνει σε διαφορετικούς builders. Ταυτόχρονα ελέγχει και αποκλείει τις λέξεις που περιέχονται στο 
exclusion list, χωρίς να εξισώνει κεφαλαία και πεζά γράμματα. Αυτές οι λέξεις διαβάζονται από ένα αρχείο που δίνεται 
στην γραμμή εντολών και τοποθετούνται σε μια λίστα. Η κάθε λέξη που έχει περάσει τον έλεγχο έχει έναν ένα συγκεκριμένο 
Hash Number.  Έτσι κάθε φορά που εμφανίζεται η ίδια λέξη θα προωθείται στον ίδιο builder με τις προηγούμενες επαναλήψεις 
της. Μόλις ο splitter τελειώσει την λειτουργία του στέλνει ένα USR1 signal στο root.


Οι builders δημιουργούνται και πάλι από το root process και ο αριθμός m των builders δίνεται από τη γραμμή εντολών. 
Μετά από κάθε fork, μέσω και πάλι του execlp οι builders τρέχουν το εκτελέσιμο του builders.c. Η επικοινωνία ανάμεσα 
στους splitters και τους builders γίνεται με m (αριθμός των builders) Named Pipes, τα οποία έχουν δημιουργηθεί από το root. 
Οι builders συλλέγουν όλες τις λέξεις που έχουν σταλεί από τους splitters και τις τοποθετούν σε λίστες μαζί με τον αριθμό 
των φορών που έχουν εμφανιστεί στο κείμενο. Μόλις μαζέψουν όλες τις λέξεις τις στέλνουν μέσω m pipes πίσω στο root. 
Με τη χρήση διαφορετικών pipes στέλνουν τον αριθμό που εμφανίζεται η κάθε λέξη στο κείμενο. Στο τέλος της λειτουργίας του, 
ο κάθε builder στέλνει ένα USR2 signal στο root και εκτυπώνει τον χρόνο που χρειάστηκε για να ολοκληρώσει τη δουλειά του.


Το root μαζεύει όλες τις λέξεις που έχει λάβει από τους builders και τις τοποθετεί σε μια ταξινομημένη λίστα. 
Τέλος εμφανίζει τις topK συχνότερες λέξεις με βάση τον αριθμό k που έχει δοθεί από τη γραμμή εντολών, 
τον χρόνο που του πήρε για να εκτελεστεί, καθώς και τα σήματα USR1 και USR2 που έχουν πιάσει οι handlers.